# macOS folder attributes
.DS_Store

# Rust auto-generated
target/
**/*.rs.bk

# CARGO.LOCK - Source controlling strategy
#
# We have multiple workspaces/crates in this repository:
#
# TYPE 1:
# - The root workspace of libraries. As per docs in below link, libraries shouldn't have Cargo.lock source controlled.
#   The Cargo.lock of packages is ignored anyway by crates pulling them in.
#   https://doc.rust-lang.org/cargo/faq.html#why-do-binaries-have-cargolock-in-version-control-but-not-libraries
Cargo.lock

# TYPE 2:
# - The radix-clis workspace/package. This is an application, and so has its Cargo.lock source controlled
!radix-clis/Cargo.lock

# TYPE 3:
# - Examples should have their own Cargo.lock files to show good practice
!examples/**/Cargo.lock


# TYPE 4:
# - The asset scrypto packages. These need to be built deterministically, so include a Cargo.lock (at a shared workspace layer)
#   But also keep blanket ignoring all the old Cargo.locks before they moved to blueprints, to avoid developer git issues
!radix-engine/assets/**/Cargo.lock
!radix-transaction-scenarios/assets/**/Cargo.lock
!scrypto-test/assets/**/Cargo.lock

# TYPE 5:
# - Various test scrypto packages. We don't care too much about either way - but we do want CI to run without a lock, so let's git ignore these.
#   Also make sure to blanket ignore all the old Cargo.locks before they moved to blueprints, to avoid developer git issues
radix-engine-tests/**/Cargo.lock
radix-clis/tests/**/Cargo.lock

# FURTHER DETAILS:
# Our CI tests ensure that libraries can build and have their tests run with an empty lock file (ie, with the latest semver
# crates available on crates.io).
#
# In the future, we leave the option open to including more Cargo.locks for more of the repository, to speed up our local
# builds and provide a consistent set of dependencies developers can use to get-up-and-running.

# Flamegraph profiles
flamegraph.svg
perf.data

# IntelliJ
.idea/

# VScode
.vscode/launch.json

# Emacs
*~

# Rusty-tags
*.vi

# Source based coverage
*.profraw

